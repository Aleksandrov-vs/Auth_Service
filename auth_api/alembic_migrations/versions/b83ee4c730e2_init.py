"""init

Revision ID: b83ee4c730e2
Revises: 
Create Date: 2023-06-14 02:40:15.922692

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b83ee4c730e2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('auth_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.String(length=300), nullable=True),
    sa.Column('user_device_type', sa.Text(), nullable=False),
    sa.Column('auth_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_device_type'),
    sa.UniqueConstraint('id', 'user_device_type'),
    postgresql_partition_by='LIST (user_device_type)'
    )
    op.create_table('user_role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('role_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    op.execute(
        """
        CREATE TABLE IF NOT EXISTS "auth_history_in_smart" 
        PARTITION OF "auth_history" FOR VALUES IN ('smart')
        """)
    op.execute(
        """
        CREATE TABLE IF NOT EXISTS "auth_history_in_web"
         PARTITION OF "auth_history" FOR VALUES IN ('web')
         """
    )
    op.execute(
        """
         CREATE TABLE IF NOT EXISTS "auth_history_in_api_client"
        PARTITION OF "auth_history" FOR VALUES IN ('api_client')
        """
    )
    op.execute(
        """
        CREATE TABLE IF NOT EXISTS "auth_history_in_mobile" 
        PARTITION OF "auth_history" FOR VALUES IN ('mobile')
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_role')
    op.drop_table('auth_history')
    op.drop_table('users')
    op.drop_table('roles')
    op.execute(
        """
        DROP TABLE IF EXISTS "auth_history_in_smart" 
        """)
    op.execute(
        """
        DROP TABLE IF EXISTS "auth_history_in_web"
         """
    )
    op.execute(
        """
         DROP TABLE IF EXISTS "auth_history_in_api_client"
        """
    )
    op.execute(
        """
       DROP TABLE IF EXISTS "auth_history_in_mobile" 
        """
    )
    # ### end Alembic commands ###
